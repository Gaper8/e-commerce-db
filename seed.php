<?php
require_once 'vendor/autoload.php';

//database connection.
$dsn = 'mysql:host=localhost;dbname=testdb;charset=utf8';
$username = 'root';
$password = '';
$options = [
    PDO::ATTR_ERRMODE => PDO::ERRMODE_EXCEPTION,
    PDO::ATTR_DEFAULT_FETCH_MODE => PDO::FETCH_ASSOC,
];

try {
    //pdo connection.
    $pdo = new PDO($dsn, $username, $password, $options);
    //error handling.
    echo "Connexion réussie à la base de données.\n";
} catch (PDOException $e) {
    die("Erreur : " . $e->getMessage());
}

//faker initialization in french.
$faker = Faker\Factory::create('fr_FR'); 

//table user.
//insert user with their data.
for ($i = 0; $i < 10; $i++) {
    //Data is generated by faker.
    $username = $faker->userName;
    $email = $faker->email;
    //password is hashed.
    $password = password_hash($faker->password, PASSWORD_DEFAULT);
    $phone_number = $faker->phoneNumber;

    //query added with data.
    $stmt = $pdo->prepare("INSERT INTO User (username, email, password, phone_number) 
                          VALUES (:username, :email, :password, :phone_number)");
    $stmt->execute([
        ':username' => $username,
        ':email' => $email,
        ':password' => $password,
        ':phone_number' => $phone_number,
    ]);

}

//table adresses.
//Each user receives an associated address.
//user_id is a foreign key to link each address to a user.
for ($i = 0; $i < 10; $i++) {
    $user_id = $i + 1;
    $street = $faker->streetAddress;
    $city = $faker->city;
    $postal_code = $faker->postcode;
    $country = $faker->country;

    //query added with data
    $stmt = $pdo->prepare("INSERT INTO Adresses (user_id, street, city, postal_code, country) 
                          VALUES (:user_id, :street, :city, :postal_code, :country)");
    $stmt->execute([
        ':user_id' => $user_id,
        ':street' => $street,
        ':city' => $city,
        ':postal_code' => $postal_code,
        ':country' => $country,
    ]);

}

//table product.
//Fictitious products generated with data generated by faker.
for ($i = 0; $i < 10; $i++) {
    $name = $faker->word;
    $description = $faker->sentence;
    $price = $faker->randomFloat(2, 10, 1000);
    $stock_quantity = $faker->numberBetween(1, 100);
    $category = $faker->word;

    //query added with data.
    $stmt = $pdo->prepare("INSERT INTO Product (name, description, price, stock_quantity, category) 
                          VALUES (:name, :description, :price, :stock_quantity, :category)");
    $stmt->execute([
        ':name' => $name,
        ':description' => $description,
        ':price' => $price,
        ':stock_quantity' => $stock_quantity,
        ':category' => $category,
    ]);

}

//table cart.
//A shopping cart is created for each user.
for ($i = 0; $i < 10; $i++) {
    $user_id = $i + 1; 

    //query added with data.
    $stmt = $pdo->prepare("INSERT INTO Cart (user_id) VALUES (:user_id)");
    $stmt->execute([
        ':user_id' => $user_id,
    ]);

}

//table cart_product.
//adding products to carts with random quantity.
for ($i = 0; $i < 10; $i++) {
    $cart_id = $i + 1;
    $product_id = $faker->numberBetween(1, 10);
    $quantity = $faker->numberBetween(1, 5);

    //query added with data.
    //Each product is linked to a cart.
    $stmt = $pdo->prepare("INSERT INTO Cart_Product (cart_id, product_id, quantity) 
                          VALUES (:cart_id, :product_id, :quantity)");
    $stmt->execute([
        ':cart_id' => $cart_id,
        ':product_id' => $product_id,
        ':quantity' => $quantity,
    ]);

}

//table Commands.
//Generation of orders with random status for each user.
for ($i = 0; $i < 10; $i++) {
    $user_id = $i + 1;
    $status = $faker->randomElement(['en cours', 'livré', 'annulé']);
    $adress_id = $i + 1;

    //query added with data.
    //Each order is linked to an address and a user.
    $stmt = $pdo->prepare("INSERT INTO Commands (user_id, status, adress_id)
                          VALUES (:user_id, :status, :adress_id)");
    $stmt->execute([
        ':user_id' => $user_id,
        ':status' => $status,
        ':adress_id' => $adress_id,
    ]);

}

//table Commande_product.
//manages the relationship between orders and the products ordered.
for ($i = 0; $i < 10; $i++) {
    $command_id = $i + 1;
    $product_id = $faker->numberBetween(1, 10);
    $quantity = $faker->numberBetween(1, 5);

    //query added with data.
    $stmt = $pdo->prepare("INSERT INTO Command_Product (command_id, product_id, quantity) 
                          VALUES (:command_id, :product_id, :quantity)");
    $stmt->execute([
        ':command_id' => $command_id,
        ':product_id' => $product_id,
        ':quantity' => $quantity,
    ]);

}

//table invoice.
//This code creates an invoice for each order, the data is generated by faker.
for ($i = 0; $i < 10; $i++) {
    $command_id = $i + 1;
    $user_id = $i + 1;
    $adress_id = $i + 1;
    $total_amount = $faker->randomFloat(2, 50, 1000); 
    $delivered_date = $faker->dateTimeThisYear()->format('Y-m-d H:i:s');

    //query added with data.
    $stmt = $pdo->prepare("INSERT INTO Invoice (command_id, total_amount, user_id, adress_id, delivered_date) 
                          VALUES (:command_id, :total_amount, :user_id, :adress_id, :delivered_date)");
    $stmt->execute([
        ':command_id' => $command_id,
        ':total_amount' => $total_amount,
        ':user_id' => $user_id,
        ':adress_id' => $adress_id,
        ':delivered_date' => $delivered_date,
    ]);

}


$pdo = null;
?>
